# Generated by Django 4.2.7 on 2025-08-10 12:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='اسم الحساب')),
                ('code', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='كود الحساب')),
                ('type', models.CharField(choices=[('asset', 'أصل'), ('liability', 'التزام'), ('equity', 'حقوق ملكية'), ('income', 'إيراد'), ('expense', 'مصروف')], db_index=True, max_length=50, verbose_name='نوع الحساب')),
            ],
            options={
                'verbose_name': 'حساب',
                'verbose_name_plural': 'الحسابات',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='AccountingSuggestionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='الزمن')),
                ('suggested_by_ai', models.BooleanField(default=True, verbose_name='مُقترح بواسطة الذكاء الاصطناعي؟')),
                ('suggestion_type', models.CharField(db_index=True, max_length=100, verbose_name='نوع الاقتراح')),
                ('description', models.TextField(verbose_name='الوصف')),
                ('risk_level', models.CharField(choices=[('Low', 'منخفض'), ('Medium', 'متوسط'), ('High', 'مرتفع')], db_index=True, max_length=20, verbose_name='مستوى الخطورة')),
                ('resolved', models.BooleanField(default=False, verbose_name='تمت المعالجة؟')),
            ],
            options={
                'verbose_name': 'سجل اقتراح محاسبي',
                'verbose_name_plural': 'سجل اقتراحات محاسبية',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='اسم الأصل')),
                ('asset_type', models.CharField(choices=[('vehicle', 'مركبة'), ('machine', 'آلة'), ('furniture', 'أثاث'), ('equipment', 'معدات'), ('other', 'أخرى')], db_index=True, max_length=50, verbose_name='نوع الأصل')),
                ('purchase_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ الشراء')),
                ('value', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='القيمة')),
                ('depreciation_rate', models.DecimalField(decimal_places=2, help_text='مثال: 10 تعني 10% سنويًا', max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='معدل الإهلاك (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط؟')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
            ],
            options={
                'verbose_name': 'أصل',
                'verbose_name_plural': 'الأصول',
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='BillOfMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='اسم الـBOM')),
                ('product_name', models.CharField(db_index=True, max_length=255, verbose_name='اسم المنتج')),
                ('components_json', models.TextField(blank=True, null=True, verbose_name='المكوّنات (JSON)')),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='إجمالي التكلفة')),
            ],
            options={
                'verbose_name': 'قائمة مواد (BOM)',
                'verbose_name_plural': 'قوائم المواد (BOM)',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CashTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='المبلغ')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='التاريخ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='الوصف')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'عملية نقدية',
                'verbose_name_plural': 'عمليات نقدية',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='اسم العميل')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='رقم الهاتف')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('address', models.TextField(blank=True, null=True, verbose_name='العنوان')),
                ('governorate', models.CharField(blank=True, max_length=100, null=True, verbose_name='المحافظة')),
            ],
            options={
                'verbose_name': 'عميل',
                'verbose_name_plural': 'العملاء',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='الوصف')),
                ('category', models.CharField(choices=[('rent', 'إيجار'), ('utilities', 'مرافق'), ('supplies', 'مستلزمات'), ('transport', 'نقل'), ('other', 'أخرى')], db_index=True, max_length=50, verbose_name='التصنيف')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='المبلغ')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='التاريخ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'مصروف',
                'verbose_name_plural': 'المصروفات',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='رقم الفاتورة')),
                ('date_issued', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ الإصدار')),
                ('due_date', models.DateField(verbose_name='تاريخ الاستحقاق')),
                ('payment_method', models.CharField(choices=[('cash', 'نقدي'), ('bank', 'تحويل بنكي'), ('vodafone', 'فودافون كاش'), ('etisalat', 'اتصالات كاش'), ('orange', 'أورنج كاش'), ('instapay', 'إنستا باي'), ('cheque', 'شيك')], max_length=20, verbose_name='طريقة الدفع')),
                ('sale_type', models.CharField(choices=[('cash', 'بيع نقدي'), ('credit', 'بيع آجل'), ('bill_of_lading', 'بوليصة شحن')], default='cash', max_length=20, verbose_name='نوع البيع')),
                ('currency', models.CharField(default='EGP', max_length=10, verbose_name='العملة')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='الإجمالي')),
                ('status', models.CharField(choices=[('paid', 'مدفوعة'), ('unpaid', 'غير مدفوعة'), ('partial', 'مدفوعة جزئيًا'), ('overdue', 'متأخرة')], db_index=True, default='unpaid', max_length=20, verbose_name='الحالة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'فاتورة',
                'verbose_name_plural': 'الفواتير',
                'ordering': ['-date_issued'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, verbose_name='اسم المنتج')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='الكمية')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='سعر الوحدة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
            ],
            options={
                'verbose_name': 'بند فاتورة',
                'verbose_name_plural': 'بنود الفواتير',
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='التاريخ')),
                ('description', models.CharField(max_length=255, verbose_name='الوصف')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='الإجمالي')),
                ('entry_type', models.CharField(choices=[('manual', 'يدوي'), ('system', 'آلي')], db_index=True, default='manual', max_length=20, verbose_name='نوع القيد')),
                ('debit', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مدين')),
                ('credit', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='دائن')),
            ],
            options={
                'verbose_name': 'قيد يومية',
                'verbose_name_plural': 'قيود اليومية',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='JournalItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مدين')),
                ('credit', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='دائن')),
            ],
            options={
                'verbose_name': 'بند قيد',
                'verbose_name_plural': 'بنود القيود',
            },
        ),
        migrations.CreateModel(
            name='ManufacturingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='رقم أمر التصنيع')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='الكمية')),
                ('status', models.CharField(choices=[('pending', 'قيد الانتظار'), ('in_progress', 'جارٍ التصنيع'), ('completed', 'تم التصنيع')], db_index=True, default='pending', max_length=20, verbose_name='الحالة')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ البدء')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانتهاء')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='التكلفة الفعلية')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
            ],
            options={
                'verbose_name': 'أمر تصنيع',
                'verbose_name_plural': 'أوامر التصنيع',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='المبلغ')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ الدفع')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
            ],
            options={
                'verbose_name': 'سداد فاتورة',
                'verbose_name_plural': 'سداد الفواتير',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='اسم طريقة الدفع')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشطة؟')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
            ],
            options={
                'verbose_name': 'طريقة دفع',
                'verbose_name_plural': 'طرق الدفع',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='المبلغ')),
                ('payment_method', models.CharField(choices=[('cash', 'نقدي'), ('bank', 'تحويل بنكي'), ('cheque', 'شيك'), ('other', 'أخرى')], max_length=20, verbose_name='طريقة الدفع')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ الدفع')),
                ('reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='مرجع')),
                ('note', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
            ],
            options={
                'verbose_name': 'أمر دفع',
                'verbose_name_plural': 'أوامر الدفع',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='رقم الفاتورة')),
                ('date_issued', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ الشراء')),
                ('due_date', models.DateField(verbose_name='تاريخ الاستحقاق')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='الإجمالي')),
                ('status', models.CharField(choices=[('unpaid', 'غير مدفوعة'), ('partial', 'مدفوعة جزئيًا'), ('paid', 'مدفوعة'), ('overdue', 'متأخرة')], db_index=True, default='unpaid', max_length=20, verbose_name='الحالة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'فاتورة مشتريات',
                'verbose_name_plural': 'فواتير المشتريات',
                'ordering': ['-date_issued'],
            },
        ),
        migrations.CreateModel(
            name='SalesInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='رقم الفاتورة')),
                ('date_issued', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ الإصدار')),
                ('due_date', models.DateField(verbose_name='تاريخ الاستحقاق')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='الإجمالي')),
                ('status', models.CharField(choices=[('unpaid', 'غير مدفوعة'), ('partial', 'مدفوعة جزئيًا'), ('paid', 'مدفوعة'), ('overdue', 'متأخرة')], db_index=True, default='unpaid', max_length=20, verbose_name='الحالة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'فاتورة مبيعات',
                'verbose_name_plural': 'فواتير المبيعات',
                'ordering': ['-date_issued'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='اسم المورد')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='رقم الهاتف')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('address', models.TextField(blank=True, null=True, verbose_name='العنوان')),
                ('governorate', models.CharField(blank=True, max_length=100, null=True, verbose_name='المحافظة')),
            ],
            options={
                'verbose_name': 'مورد',
                'verbose_name_plural': 'الموردين',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplierInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='رقم الفاتورة')),
                ('date_issued', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ الإصدار')),
                ('due_date', models.DateField(verbose_name='تاريخ الاستحقاق')),
                ('payment_method', models.CharField(choices=[('cash', 'نقدي'), ('bank', 'تحويل بنكي'), ('cheque', 'شيك'), ('vodafone', 'فودافون كاش'), ('etisalat', 'اتصالات كاش'), ('orange', 'أورنج كاش'), ('instapay', 'إنستا باي')], max_length=20, verbose_name='طريقة الدفع')),
                ('currency', models.CharField(default='EGP', max_length=10, verbose_name='العملة')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='الإجمالي')),
                ('status', models.CharField(choices=[('unpaid', 'غير مدفوعة'), ('partial', 'مدفوعة جزئيًا'), ('paid', 'مدفوعة'), ('overdue', 'متأخرة')], db_index=True, default='unpaid', max_length=20, verbose_name='الحالة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_invoices', to='accounting.supplier', verbose_name='المورد')),
            ],
            options={
                'verbose_name': 'فاتورة مورد',
                'verbose_name_plural': 'فواتير الموردين',
                'ordering': ['-date_issued'],
            },
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['name'], name='accounting__name_eee1a2_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['phone'], name='accounting__phone_267f48_idx'),
        ),
        migrations.AddField(
            model_name='salesinvoice',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee', verbose_name='أنشئ بواسطة'),
        ),
        migrations.AddField(
            model_name='salesinvoice',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_invoices', to='accounting.customer', verbose_name='العميل'),
        ),
        migrations.AddField(
            model_name='purchaseinvoice',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee', verbose_name='أنشئ بواسطة'),
        ),
        migrations.AddField(
            model_name='purchaseinvoice',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_invoices', to='accounting.supplier', verbose_name='المورد'),
        ),
        migrations.AddField(
            model_name='paymentorder',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='أنشئ بواسطة'),
        ),
        migrations.AddField(
            model_name='paymentorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_orders', to='accounting.supplier', verbose_name='المورد'),
        ),
        migrations.AddField(
            model_name='payment',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounting.invoice', verbose_name='الفاتورة'),
        ),
        migrations.AddField(
            model_name='manufacturingorder',
            name='bom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manufacturing_orders', to='accounting.billofmaterial', verbose_name='قائمة المواد'),
        ),
        migrations.AddField(
            model_name='journalitem',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.account', verbose_name='الحساب'),
        ),
        migrations.AddField(
            model_name='journalitem',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.journalentry', verbose_name='القيد'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee', verbose_name='أنشئ بواسطة'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_entries', to='accounting.invoice', verbose_name='فاتورة مرتبطة'),
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='purchase_invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.purchaseinvoice', verbose_name='فاتورة مشتريات'),
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='sales_invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.salesinvoice', verbose_name='فاتورة مبيعات'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='accounting.customer', verbose_name='العميل'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['date'], name='accounting__date_c78dd7_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['category'], name='accounting__categor_2b41ab_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['name'], name='accounting__name_3f4a28_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['phone'], name='accounting__phone_40f02c_idx'),
        ),
        migrations.AddIndex(
            model_name='cashtransaction',
            index=models.Index(fields=['date'], name='accounting__date_d8cbe3_idx'),
        ),
        migrations.AddIndex(
            model_name='billofmaterial',
            index=models.Index(fields=['product_name'], name='accounting__product_278ab9_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['asset_type'], name='accounting__asset_t_b1afd5_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['is_active'], name='accounting__is_acti_742660_idx'),
        ),
        migrations.AddIndex(
            model_name='accountingsuggestionlog',
            index=models.Index(fields=['timestamp'], name='accounting__timesta_18602b_idx'),
        ),
        migrations.AddIndex(
            model_name='accountingsuggestionlog',
            index=models.Index(fields=['risk_level'], name='accounting__risk_le_8be360_idx'),
        ),
        migrations.AddIndex(
            model_name='accountingsuggestionlog',
            index=models.Index(fields=['resolved'], name='accounting__resolve_6e4008_idx'),
        ),
        migrations.AddField(
            model_name='account',
            name='customer',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account', to='accounting.customer', verbose_name='يرتبط بعميل'),
        ),
        migrations.AddField(
            model_name='account',
            name='supplier',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account', to='accounting.supplier', verbose_name='يرتبط بمورد'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['date_issued'], name='accounting__date_is_b0512d_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['status'], name='accounting__status_d64856_idx'),
        ),
        migrations.AddIndex(
            model_name='salesinvoice',
            index=models.Index(fields=['date_issued'], name='accounting__date_is_c9f88b_idx'),
        ),
        migrations.AddIndex(
            model_name='salesinvoice',
            index=models.Index(fields=['status'], name='accounting__status_76cf24_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseinvoice',
            index=models.Index(fields=['date_issued'], name='accounting__date_is_9f81fc_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseinvoice',
            index=models.Index(fields=['status'], name='accounting__status_c4245e_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentorder',
            index=models.Index(fields=['payment_date'], name='accounting__payment_7efc46_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentorder',
            index=models.Index(fields=['payment_method'], name='accounting__payment_675752_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_date'], name='accounting__payment_710664_idx'),
        ),
        migrations.AddIndex(
            model_name='manufacturingorder',
            index=models.Index(fields=['status'], name='accounting__status_cfe028_idx'),
        ),
        migrations.AddIndex(
            model_name='manufacturingorder',
            index=models.Index(fields=['start_date'], name='accounting__start_d_59d110_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['date'], name='accounting__date_e3f521_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['entry_type'], name='accounting__entry_t_5e6cde_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['date_issued'], name='accounting__date_is_c42645_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='accounting__due_dat_cfd46e_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='accounting__status_3055e0_idx'),
        ),
    ]
