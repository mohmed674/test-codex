# core/management/commands/prepare_db.py
# -*- coding: utf-8 -*-
import sys
from django.core.management.base import BaseCommand, CommandError
from django.core.management import call_command

class Command(BaseCommand):
    help = "ØªÙ‡ÙŠØ¦Ø© Ù‚Ø§Ø¹Ø¯Ø© Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª: makemigrations + migrate Ø¨Ø§Ù„ØªØ±ØªÙŠØ¨ Ø§Ù„ØµØ­ÙŠØ­."

    def add_arguments(self, parser):
        parser.add_argument("--fake-initial", action="store_true", help="ØªÙ…Ø±ÙŠØ± --fake-initial Ù„Ù„Ù€ migrate")

    def handle(self, *args, **opts):
        try:
            self.stdout.write(self.style.HTTP_INFO("ðŸ”§ makemigrations..."))
            call_command("makemigrations", interactive=False, verbosity=1)

            self.stdout.write(self.style.HTTP_INFO("ðŸ“¦ migrate..."))
            mig_opts = {"verbosity": 1}
            if opts.get("fake_initial"):
                mig_opts["fake_initial"] = True
            call_command("migrate", **mig_opts)

            self.stdout.write(self.style.SUCCESS("âœ… Ù‚Ø§Ø¹Ø¯Ø© Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª Ø¬Ø§Ù‡Ø²Ø©."))
        except Exception as e:
            raise CommandError(str(e))
