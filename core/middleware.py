# core/middleware.py
from datetime import timedelta
from django.utils.deprecation import MiddlewareMixin
from django.utils.timezone import now
from django.utils.translation import gettext_lazy as _
from django.contrib import messages

from apps.internal_monitoring.models import InventoryDiscrepancy, SuspiciousActivity


class MonitoringAlertMiddleware(MiddlewareMixin):
    """
    ┘К┘П╪╕┘З╪▒ ╪к┘Ж╪и┘К┘З╪з╪к ╪│╪▒┘К╪╣╪й ┘Д┘Д┘Е╪│╪к╪о╪п┘Е┘К┘Ж ╪з┘Д┘Е╪│╪м┘С┘О┘Д┘К┘Ж ╪╣┘Ж:
      - ┘И╪м┘И╪п ╪╣╪м╪▓ ┘Е╪о╪▓┘Ж┘К ╪║┘К╪▒ ┘Е╪н┘Д┘И┘Д
      - ┘И╪м┘И╪п ╪г┘Ж╪┤╪╖╪й ┘Е╪┤╪и┘И┘З╪й ╪о┘Д╪з┘Д ╪в╪о╪▒ 48 ╪│╪з╪╣╪й ╪║┘К╪▒ ┘Е╪н┘Д┘И┘Д╪й
    ╪з┘Д╪▒╪│╪з╪ж┘Д ┘Е┘Д┘Б┘И┘Б╪й ╪и┘А gettext_lazy ┘Д╪╢┘Е╪з┘Ж ╪з┘Д╪к╪▒╪м┘Е╪й ╪н╪│╪и ╪з┘Д┘Д╪║╪й ╪з┘Д┘Е╪о╪к╪з╪▒╪й.
    """
    def process_request(self, request):
        if not getattr(request, "user", None) or not request.user.is_authenticated:
            return

        # ╪к┘Ж╪и┘К┘З ╪и┘И╪м┘И╪п ╪╣╪м╪▓ ┘Е╪о╪▓┘Ж┘К ╪║┘К╪▒ ┘Е╪н┘Д┘И┘Д
        if InventoryDiscrepancy.objects.filter(resolved=False).exists():
            messages.warning(request, _("тЪая╕П ┘К┘И╪м╪п ╪╣╪м╪▓ ┘Е╪о╪▓┘Ж┘К ╪м╪з╪▒┘К ╪з┘Д╪к╪н┘В┘К┘В ┘Б┘К┘З!"))

        # ╪к┘Ж╪и┘К┘З ╪и┘И╪м┘И╪п ┘Ж╪┤╪з╪╖ ┘Е╪┤╪и┘И┘З ╪о┘Д╪з┘Д ╪в╪о╪▒ 48 ╪│╪з╪╣╪й ╪║┘К╪▒ ┘Е╪н┘Д┘И┘Д
        recent_activities = SuspiciousActivity.objects.filter(
            timestamp__gte=now() - timedelta(hours=48),
            resolved=False
        )
        if recent_activities.exists():
            messages.error(request, _("ЁЯЪи ╪к┘Е ╪▒╪╡╪п ╪г┘Ж╪┤╪╖╪й ┘Е╪┤╪и┘И┘З╪й ┘Е╪д╪о╪▒┘Л╪з╪М ╪▒╪з╪м╪╣ ╪з┘Д┘Е╪▒╪з┘В╪и╪й ╪з┘Д╪░┘Г┘К╪й."))


class NoCacheHTMLMiddleware(MiddlewareMixin):
    """
    ┘К┘Е┘Ж╪╣ ╪к╪о╪▓┘К┘Ж ╪╡┘Б╪н╪з╪к HTML ┘Б┘К ╪з┘Д┘Г╪з╪┤ ┘Д╪╢┘Е╪з┘Ж ╪г┘Ж ╪к╪║┘К┘К╪▒ ╪з┘Д┘Д╪║╪й ┘К╪╕┘З╪▒ ┘Б┘И╪▒┘Л╪з╪М
    ┘И┘К╪╢┘К┘Б ╪к╪▒┘И┘К╪│╪з╪к Vary ╪╣┘Д┘Й Cookie ┘И Accept-Language.
    """
    def process_response(self, request, response):
        content_type = response.get('Content-Type', '')
        if 'text/html' in content_type:
            # ┘Д╪з ┘Г╪з╪┤ ╪╣┘Д┘Й HTML
            response['Cache-Control'] = 'no-cache, no-store, must-revalidate'
            response['Pragma'] = 'no-cache'
            response['Expires'] = '0'

            # ╪з┘Д╪▒╪п ┘К╪к╪г╪л╪▒ ╪и╪з┘Д┘Д╪║╪й ╪з┘Д┘Е╪о╪к╪з╪▒╪й ┘И┘Г┘И┘Г┘К ╪з┘Д╪м┘Д╪│╪й
            vary_existing = response.get('Vary', '')
            vary_set = {v.strip() for v in vary_existing.split(',') if v.strip()}
            vary_set.update({'Cookie', 'Accept-Language'})
            response['Vary'] = ', '.join(sorted(vary_set))

        return response
